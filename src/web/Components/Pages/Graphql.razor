@page "/graphql"
@inject IStartrekClient startrekClient
@rendermode InteractiveServer

<PageTitle>Series by GraphQL</PageTitle>

<h1>Series by GraphQL</h1>

@if (result.Count() <= 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Series</th>
                <th>Characters</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var serie in result)
            {
                <tr>
                    <td>@serie.Name</td>
                    <td>
                        <ul>
                            @foreach (var character in serie.Character.Items)
                            {
                                <li>@character.Name</li>
                            }
                        </ul>    
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
	IEnumerable<IGetCharacterBySeries_Series_Items> result = new List<IGetCharacterBySeries_Series_Items>();

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
		var temp = await startrekClient.GetCharacterBySeries.ExecuteAsync();

		result = temp.Data.Series.Items;
		
	}
}


