@page "/rest"
@using startrekdemo.Domain
@using System.Text.Json
@inject HttpClient httpClient
@rendermode InteractiveServer

<PageTitle>Series by Rest</PageTitle>

<h1>Series by Rest</h1>

@if (shows.value.Count() <= 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Series</th>
                <th>Characters</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var serie in shows.value)
            {
                <tr>
                    <td>@serie.Name</td>
                    <td>
                        <ul>
                            @foreach (var character in serie.Characters.value)
                            {
                                <li>@character.Name</li>
                            }
                        </ul>  
                    </td> 
                </tr>
            }
        </tbody>
    </table>
}


@code {
	private SeriesList shows = new SeriesList();

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
		JsonSerializerOptions options = new JsonSerializerOptions { PropertyNameCaseInsensitive = true };
		
        var showslist = await httpClient.GetFromJsonAsync<SeriesList>("series", options);	
		var seriesCharacters = await httpClient.GetFromJsonAsync<SeriesCharacterList>("Series_Character", options);
		var characters = await httpClient.GetFromJsonAsync<CharacterList>("character", options);

		@* foreach(var show in showslist.value)  
		{
			foreach(var matchSC in seriesCharacters.value)
			{
				if (show.Id == matchSC.SeriesId)
				{
					foreach (var character in characters.value)
					{
						if (matchSC.CharacterId == character.Id)
						{
							show.Characters.value.Add(character);
						}
					}
				}
			}
		} *@

        showslist.value.ForEach(show =>
        {
            seriesCharacters.value.ForEach(matchSC =>
            {
                if (show.Id == matchSC.SeriesId)
                {
                    var matchingCharacter = characters.value.FirstOrDefault(c => c.Id == matchSC.CharacterId);
                    if (matchingCharacter != null)
                    {
                        show.Characters.value.Add(matchingCharacter);
                    }
                }
            });
        });
		shows = showslist;
	}


}


