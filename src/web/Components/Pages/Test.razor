@page "/test"

@using Microsoft.AspNetCore.Components.QuickGrid
@using System.Text.Json
@using startrekdemo.Domain

@inject HttpClient httpClient
@rendermode InteractiveServer

<PageTitle>Virtualize QuickGrid</PageTitle>

<h1>Virtualize QuickGrid</h1>

<div class="grid">
    <QuickGrid ItemsProvider="@planetsProvider" Virtualize="true">
        <PropertyColumn Property="@(s => s.Id)" Sortable="true" />
        <PropertyColumn Property="@(s => s.Name)" Sortable="true" />
        <PropertyColumn Property="@(s => s.Coordinates)" Sortable="true" />
    </QuickGrid>
</div>

<div class="inline-block my-1">
    Total: <strong>@numResults results</strong>
</div>


@code {

    GridItemsProvider<Planet> planetsProvider;

    int numResults;
    string curChar = null;
    string url = "planet?first=100000";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        planetsProvider = async request =>
        {

            var response = await httpClient.GetFromJsonAsync<PlanetList>($"/planet?$first={request.Count}&$after={curChar}", request.CancellationToken);
            
            // if (!string.IsNullOrEmpty(response.nextLink))
            //     url = response.nextLink;

            if (response.value.Count != numResults && !request.CancellationToken.IsCancellationRequested)
            {
                numResults += response.value.Count;
                StateHasChanged();
            }

            return GridItemsProviderResult.From(
                       items: response!.value,
                       totalItemCount: numResults);
        };
    }

}


