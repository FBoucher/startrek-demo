schema {
  query: Query
}

type Query {
  planets(skip: Int take: Int sortBy: String!): PlanetsCollectionSegment
  planets2: [Planet!]!
}

"A segment of a collection."
type PlanetsCollectionSegment {
  "Information to aid in pagination."
  pageInfo: CollectionSegmentInfo!
  "A flattened list of the items."
  items: [Planet!]
  totalCount: Int!
}

"Information about the offset pagination."
type CollectionSegmentInfo {
  "Indicates whether more items exist following the set defined by the clients arguments."
  hasNextPage: Boolean!
  "Indicates whether more items exist prior the set defined by the clients arguments."
  hasPreviousPage: Boolean!
}

type Planet {
  id: Int!
  name: String!
  coordinates: String!
}